name: CI/CD
on:
  push:
    branches:
      - "main"
      - "feature/*"
      - "bugfix/*"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements-dev.txt

      - name: Lint Python code
        run: |
          python -m black .
          git diff --exit-code

      - name: Security check Python code
        run: python -m bandit -r .

      - name: Unit Tests
        run: echo "Unit Tests Placeholder"

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: xyz-application
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{sha}}-{{branch}}-${{ github.run_number }},enable=${{ github.ref_type != 'tag' }}

      - name: Metadata debug
        run: |
          echo "Tags: ${{ steps.metadata.outputs.tags }}"
          echo "Labels: ${{ steps.metadata.outputs.labels }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.TOOLING_AWS_ACCOUNT_ID }}:role/cdktf-deployment
          role-session-name: github-actions
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ steps.metadata.outputs.tags }} --build-arg APP_VERSION="${{ steps.metadata.outputs.version }}" .

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ steps.metadata.outputs.tags }}
        if: ${{ github.ref =='refs/heads/main' || github.ref_type == 'tag' }}

  cd_dev:
    needs: ci
    name: CD - Dev
    runs-on: ubuntu-latest
    if: ${{ github.ref =='refs/heads/main' || github.ref_type == 'tag' }}
    steps:
      - name: Deploy to Dev environment
        run: echo "Dev Environment deployment placeholder"

  cd_prod:
    needs: cd_dev
    name: CD - Production
    runs-on: ubuntu-latest
    if: ${{ github.ref =='refs/heads/main' || github.ref_type == 'tag' }}
    steps:
      - name: Deploy to Production environment
        run: echo "Production Environment deployment placeholder"
